plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
}

android {
    namespace 'com.simenko.qmapp'
    compileSdk 33

    defaultConfig {
        applicationId "com.simenko.qmapp"
        minSdk 26
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        dataBinding = "true"
        viewBinding = "true"
        compose = "true"
    }

    composeOptions {
        kotlinCompilerExtensionVersion '1.3.2'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {
    implementation 'androidx.compose.material3:material3:1.0.0-alpha02'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_version"


//    general staff
    def kotlin_version = '1.7.20'
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"


    // Android KTX
    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.fragment:fragment-ktx:1.5.5'
    implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"

    // support libraries
    implementation 'androidx.appcompat:appcompat:1.6.0'
    implementation 'com.google.android.material:material:1.8.0'
//    implementation 'androidx.legacy:legacy-support-v4:1.0.0'

    // constraint layout
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'

    // pager
    implementation 'androidx.viewpager2:viewpager2:1.0.0'

    // coroutines for getting off the UI thread
    def coroutines = "1.6.0"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines"


//    ViewModel and LiveData
    def lifecycle_version = "2.5.1"
    // ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    // LiveData
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    // Annotation processor
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"
    // Somehow is needed for compose
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"

// moshi for parsing the JSON format
    def moshi_version = "1.13.0"
    implementation "com.squareup.moshi:moshi:$moshi_version"
    implementation "com.squareup.moshi:moshi-kotlin:$moshi_version"
    kapt "com.squareup.moshi:moshi-kotlin-codegen:$moshi_version"

//    Retrofit dependencies
    def retrofit_version = "2.9.0"
//    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation 'com.squareup.retrofit2:converter-moshi:2.9.0'

//    Room dependency
    def room_version = "2.5.0"
    implementation "androidx.room:room-ktx:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

//    Reflection dependency
    implementation "org.jetbrains.kotlin:kotlin-reflect:1.7.20"

//    Other standard staff for testing
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

    // Dagger dependencies
    def daggerVersion = "2.45"
    implementation "com.google.dagger:dagger:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"
//    implementation "com.google.dagger:dagger-android:$daggerVersion"
//    implementation "com.google.dagger:dagger-android-support:$daggerVersion"//to inject fragments/activities
//    kapt "com.google.dagger:dagger-android-processor:$daggerVersion"
    kaptAndroidTest "com.google.dagger:dagger-compiler:$daggerVersion"

//    Compose dependencies
    def composeBom = platform('androidx.compose:compose-bom:2023.01.00')
    implementation(composeBom)
    implementation "androidx.compose.ui:ui"
    implementation "androidx.compose.material:material"
    implementation "androidx.compose.ui:ui-tooling-preview"
    debugImplementation "androidx.compose.ui:ui-tooling"
    implementation 'androidx.activity:activity-compose:1.6.1'
    implementation 'androidx.compose.material3:material3'
    implementation "androidx.compose.material:material-icons-extended"

    implementation("androidx.compose.runtime:runtime-livedata")

    implementation "com.google.accompanist:accompanist-flowlayout:0.23.1"
}