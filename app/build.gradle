plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'com.google.devtools.ksp'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
    id 'dagger.hilt.android.plugin'
}

android {
    namespace 'com.simenko.qmapp'
    compileSdk 34

    defaultConfig {
        applicationId "com.simenko.qmapp"
        minSdk 26
        targetSdk 34
        versionCode 2
        versionName "2.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }

        ksp {
            arg("room.schemaLocation", "$projectDir/schemas")
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = "17"
    }

    buildFeatures {
        compose true
    }

    composeOptions {
        kotlinCompilerExtensionVersion = "1.5.3"
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {
//    general staff
    implementation fileTree(dir: 'libs', include: ['*.jar'])

//    Firebase
    implementation 'com.google.android.gms:play-services-auth:20.7.0'
    implementation platform('com.google.firebase:firebase-bom:32.4.0')
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation 'com.google.firebase:firebase-crashlytics-ktx'
    implementation 'com.google.firebase:firebase-auth-ktx'
    implementation 'com.google.firebase:firebase-config-ktx'
    implementation 'com.google.firebase:firebase-functions-ktx'
    implementation 'com.google.firebase:firebase-firestore-ktx'
    implementation 'com.google.firebase:firebase-messaging-ktx'

    // Android KTX
    implementation 'androidx.core:core-ktx:1.12.0'
    implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"

    // support libraries
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.10.0'

    // coroutines for getting off the UI thread
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.7.3"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.7.3"


//    ViewModel and LiveData
//    ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.6.2"
//    LiveData
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.6.2"
//    Annotation processor
    implementation "androidx.lifecycle:lifecycle-common-java8:2.6.2"
//    Somehow is needed for compose
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.6.2"

//    moshi for parsing the JSON format
    implementation "com.squareup.moshi:moshi:1.15.0"
    implementation "com.squareup.moshi:moshi-kotlin:1.15.0"
    ksp "com.squareup.moshi:moshi-kotlin-codegen:1.15.0"

//    Retrofit dependencies
    implementation "com.squareup.retrofit2:retrofit:2.9.0"
    implementation 'com.squareup.retrofit2:converter-moshi:2.9.0'

//    Room dependency
    implementation 'androidx.room:room-ktx:2.6.0'
    ksp 'androidx.room:room-compiler:2.6.0'

//    Reflection dependency
    implementation "org.jetbrains.kotlin:kotlin-reflect:1.9.0"

//    Other standard staff for testing
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.0'
    testImplementation 'com.google.truth:truth:1.1.5'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

//    Dagger - Hilt
    implementation 'com.google.dagger:hilt-android:2.48.1'
    kapt 'com.google.dagger:hilt-android-compiler:2.48.1'
    kapt 'androidx.hilt:hilt-compiler:1.1.0'
    implementation 'androidx.hilt:hilt-work:1.1.0'
    implementation 'androidx.hilt:hilt-navigation-compose:1.1.0'

//    Compose dependencies
    implementation 'androidx.activity:activity-compose:1.8.0'
//    todo-me - with version 2.7.5 has problem on configuration change: java.lang.IllegalStateException: You cannot access the NavBackStackEntry's ViewModels after the NavBackStackEntry is destroyed.
    implementation "androidx.navigation:navigation-compose:2.7.4"
    implementation "androidx.lifecycle:lifecycle-runtime-compose:2.6.2"
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:2.6.2"

    def composeBom = platform('androidx.compose:compose-bom:2023.10.01')
    implementation(composeBom)
    debugImplementation(composeBom)
    androidTestImplementation(composeBom)
    implementation "androidx.compose.ui:ui"
    implementation "androidx.compose.material:material"
    implementation "androidx.compose.ui:ui-tooling-preview"
    implementation 'androidx.compose.material3:material3'
    implementation "androidx.compose.material:material-icons-extended"
    implementation "androidx.compose.runtime:runtime-livedata"
    implementation "androidx.compose.foundation:foundation"
    debugImplementation "androidx.compose.ui:ui-tooling"
    debugImplementation "androidx.compose.ui:ui-test-manifest"
    androidTestImplementation "androidx.compose.ui:ui-test-junit4"

//    implementation("androidx.compose.runtime:runtime-tracing:1.0.0-alpha03")

//    WorkManager with Coroutines
    implementation "androidx.work:work-runtime-ktx:2.8.1"
    androidTestImplementation "androidx.work:work-testing:2.8.1"
    androidTestImplementation 'com.google.truth:truth:1.1.5'

}